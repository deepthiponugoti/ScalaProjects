What is REPL? How is it useful?

REPL stands for Read Evaluate Print Loop. It is an interactive shell environment. It started with Lisp Interpretive Environment, but now a days several language supports it. It is incredibly valuable as it quickly evaluates expressions and gives fast feedback cycles. So we can experiment with language, build code, debug it and which helps for learning a language quickly. 
Read — accepts an expression and parses it.
eval — takes the parsed data and evaluates it.
print — takes the result of the evaluation and prints the data.
loop — it goes back to the start state and is ready to accepts more expressions.

Examples of languages which have their own repl is Scala,Ruby,Python


Give an example REPL session in a language of your choice (copy and paste below your REPL session from the command line).

The below shows an example repo session in ruby

MacBook-Pro:Documents xxx$ irb

irb(main):001:0> 7+2
=> 9
irb(main):002:0> arrayTest = [2, 3]
=> [2, 3]
irb(main):003:0> arrayTest + [1]
=> [2, 3, 1]
irb(main):004:0> arrayTest 
=> [2, 3]
irb(main):005:0> arrayTest2 = ["hi","hello"]
=> ["hi", "hello"]
irb(main):006:0> array << arrayTest2 
=> [2, 3, ["hi", "hello"]]

